const LocalStrategy = require("passport-local");
const passport = require("passport");
const { User } = require("../models");

function passportConfig() {
  passport.use(
    new LocalStrategy(
      {
        usernameField: "email",
        passwordField: "password",
      },
      async (email, password, cb) => {
        console.log(email, password);
        try {
          const user = await User.findOne({ where: { email: email } });
          if (!user) {
            console.log("Nombre de usuario no existe.");
            return cb(null, false, { message: "Credenciales incorrectas." });
          }

          const match = password === user.password;
          if (!match) {
            console.log("La contraseña es inválida.");
            return cb(null, false, { message: "Credenciales incorrectas. Por favor, reintentar." });
          }

          console.log("Credenciales verificadas correctamente");
          return cb(null, user);
        } catch (error) {
          cb(null, false, { message: "Ocurrió un error inesperado. Por favor, reintentar." });
        }
      },
    ),
  );

  passport.serializeUser((user, cb) => {
    cb(null, user.id);
  });

  passport.deserializeUser(async (id, cb) => {
    try {
      const user = await User.findByPk(id);
      cb(null, user); // Usuario queda disponible en req.user.
    } catch (err) {
      cb(err);
    }
  });
}

module.exports = passportConfig;